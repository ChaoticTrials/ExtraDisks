plugins {
    id 'org.moddingx.modgradle.meta' version '5.0.2'
}

repositories {
    maven {
        url = 'https://maven.pkg.github.com/refinedmods/refinedstorage2'
        credentials {
            username = 'anything'
            password = '\u0067hp_oGjcDFCn8jeTzIj4Ke9pLoEVtpnZMP4VQgaX'
        }
    }
    maven {
        name = 'ModMaven'
        url = 'https://modmaven.dev/'
    }
    maven {
        name = 'EMI'
        url = 'https://maven.terraformersmc.com/'
    }
}

var dev = System.getenv('IS_DEV')?.toBoolean() ?: false
var baseVersion = '21.1'
var jeiVersion = '19.21.0.247'
var mekanismVersion = '1.21.1-10.7.7.64'
var rsmekanismVersion = '0.2.0'
var rsVersion = '2.0.0-milestone.4.13'
var modBaseVersion = '1.21.1-4.0'
mod.configure {
    modid 'extradisks'
    group 'de.melanx'
    versioning {
        if (dev) {
            def gitCommitHash = ['git', 'rev-parse', 'HEAD'].execute().text.trim()
            constant baseVersion + (gitCommitHash ? "-${gitCommitHash}" : '')
        } else {
            base modBaseVersion
            maven 'https://maven.melanx.de/release'
        }
    }

    neoforge project.hasProperty('neo_version') ? project.neo_version : "${baseVersion}.118"

    license 'The Apache License, Version 2.0'
    github 'ChaoticTrials/ExtraDisks'

    artifacts {
        sources {
            publishToRepositories()
        }
    }

    changelog {
        def lines = defaultChangelog.toString().split('\n')
        def filteredChangelog = lines.findAll { !it.startsWith('- [meta]') }.join('\n')

        return filteredChangelog
    }


    publishing {
        maven {
            name 'melanx'
            url 'https://maven.melanx.de/release'
            credentials(PasswordCredentials)
        }
    }

    upload {
        all {
            type 'release'
            require 'refined-storage'
//            optional 'refinedstorage_mekanism_integration' todo add when released
        }
        curseforge {
            projectId 351491
        }
        modrinth {
            projectId 'Tlo2tahX'
        }
    }
}

dependencies {
    implementation "com.refinedmods.refinedstorage:refinedstorage-neoforge:${rsVersion}"

    implementation "com.refinedmods.refinedstorage:refinedstorage-mekanism-integration:${rsmekanismVersion}"

//    compileOnlyApi("mekanism:Mekanism:${mekanismVersion}:api")

    implementation "mekanism:Mekanism:${mekanismVersion}:all"
    runtimeOnly "mezz.jei:jei-1.${baseVersion}-neoforge:${jeiVersion}"
}